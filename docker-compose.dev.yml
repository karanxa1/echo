services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: echo_db_dev
    environment:
      POSTGRES_DB: echo_db
      POSTGRES_USER: echo_user
      POSTGRES_PASSWORD: echo_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U echo_user -d echo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile-minimal
    container_name: echo_backend_dev
    environment:
      DATABASE_URL: postgresql://echo_user:echo_password@db:5432/echo_db
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-this}
      DEBUG: ${DEBUG:-True}
      CHROMA_PERSIST_DIRECTORY: /app/chroma_data
      UPLOAD_FOLDER: /app/uploads
    volumes:
      - ./backend:/app
      - ./backend/chroma_data:/app/chroma_data
      - ./backend/uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: echo_frontend_dev
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      WATCHPACK_POLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data_dev: 