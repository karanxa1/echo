# =============================================================================
# ECHO Backend Environment Configuration
# =============================================================================
# Copy this file to 'config.env' and update the values below
# cp config.env.example config.env

# =============================================================================
# üîê SECURITY SETTINGS (REQUIRED)
# =============================================================================

# JWT Secret Key - CHANGE THIS IN PRODUCTION!
# Generate a secure key: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your_super_secret_jwt_key_change_this_in_production_please_make_it_long_and_random

# JWT Algorithm (recommended: HS256)
ALGORITHM=HS256

# JWT Token Expiration (in minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# ü§ñ AI API CONFIGURATIONS (Choose one or more)
# =============================================================================

# --- PAID AI SERVICES ---

# OpenAI API Key (Optional - Paid service)
# Get from: https://platform.openai.com/api-keys
# Cost: $0.0015/1K input tokens, $0.002/1K output tokens (GPT-3.5)
OPENAI_API_KEY=your_openai_api_key_here

# --- FREE AI SERVICES (Recommended) ---

# Google Gemini API Key (üåü RECOMMENDED - Best free option)
# Free tier: 15 requests/minute, 1 million tokens/month
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# Groq API Key (‚ö° FASTEST - Best for high-volume usage)
# Free tier: 14,400 tokens/minute (very generous!)
# Get from: https://console.groq.com/keys
GROQ_API_KEY=your_groq_api_key_here

# Hugging Face API Key (üß™ EXPERIMENTAL - Many models available)
# Free tier: 1,000 requests/month per model
# Get from: https://huggingface.co/settings/tokens
HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# Ollama Configuration (üîí PRIVACY - Runs locally)
# No API key needed - Install from: https://ollama.ai/
# Run: ollama serve, then: ollama pull llama3
# OLLAMA_BASE_URL=http://localhost:11434

# =============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION
# =============================================================================

# Database URL (PostgreSQL recommended for production)
# For Docker development (default):
DATABASE_URL=postgresql://echo_user:echo_password@localhost:5432/echo_db

# Alternative database options:
# SQLite (for development): sqlite:///./echo.db
# PostgreSQL (production): postgresql://user:password@host:port/database
# MySQL: mysql://user:password@host:port/database

# =============================================================================
# üåê APPLICATION SETTINGS
# =============================================================================

# Debug Mode (set to False in production)
DEBUG=True

# API Host and Port
API_HOST=localhost
API_PORT=8000

# Frontend URL (for CORS)
FRONTEND_URL=http://localhost:3000

# =============================================================================
# üìÅ FILE UPLOAD SETTINGS
# =============================================================================

# Maximum file size for uploads (in bytes)
# 10MB = 10485760, 50MB = 52428800, 100MB = 104857600
MAX_FILE_SIZE=10485760

# Upload directory (relative to backend root)
UPLOAD_FOLDER=./uploads

# =============================================================================
# üéµ AUDIO/VOICE SERVICES (Optional)
# =============================================================================

# ElevenLabs API Key (for voice cloning/synthesis)
# Get from: https://elevenlabs.io/
ELEVENLABS_API_KEY=your_elevenlabs_api_key_here

# Whisper Model Settings (for speech-to-text)
WHISPER_MODEL=base
WHISPER_LANGUAGE=en

# =============================================================================
# üìß EMAIL SETTINGS (Optional - for notifications)
# =============================================================================

# SMTP Configuration
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# SMTP_TLS=True

# =============================================================================
# üìä ANALYTICS & MONITORING (Optional)
# =============================================================================

# Sentry DSN (for error tracking)
# SENTRY_DSN=your_sentry_dsn_here

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =============================================================================
# üîß ADVANCED SETTINGS (Usually don't need to change)
# =============================================================================

# ChromaDB Settings (for vector storage)
CHROMA_PERSIST_DIRECTORY=./chroma_data
CHROMA_COLLECTION_NAME=echo_memories

# Redis URL (for caching - optional)
# REDIS_URL=redis://localhost:6379/0

# Celery Broker (for background tasks - optional)
# CELERY_BROKER_URL=redis://localhost:6379/0

# =============================================================================
# üí° QUICK SETUP GUIDE
# =============================================================================
#
# 1. MINIMUM REQUIRED:
#    - Set SECRET_KEY to a random string
#    - Choose at least one AI service (Gemini recommended)
#
# 2. RECOMMENDED FREE SETUP:
#    - Get Gemini API key (best quality)
#    - Get Groq API key (best speed)
#    - Keep DEBUG=True for development
#
# 3. PRODUCTION SETUP:
#    - Set DEBUG=False
#    - Use PostgreSQL DATABASE_URL
#    - Set proper FRONTEND_URL
#    - Use secure SECRET_KEY
#
# ============================================================================= 